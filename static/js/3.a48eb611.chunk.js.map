{"version":3,"sources":["../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/shortid/node_modules/nanoid/format.browser.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","components/Form/Form.module.css","components/ContactsList/ContactsList.module.css","components/Filter/Filter.module.css","views/PhoneBookViews/PhoneBookViews.module.css","components/Section/Section.jsx","redux/contacts/contactsSelectors.jsx","components/Form/Form.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.jsx","views/PhoneBookViews/PhonebookView.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/shortid/lib/alphabet.js","components/Section/Section.module.css","../node_modules/shortid/index.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js"],"names":["randomByte","crypto","window","msCrypto","getRandomValues","size","Uint8Array","bytes","i","push","Math","floor","random","module","exports","alphabet","mask","log","length","LN2","step","id","require","RegExp","get","replace","test","Section","title","children","className","s","section","getContacts","state","phoneBook","contacts","getIsLoading","isLoading","getFilter","filter","getVisibleContacts","createSelector","normalizedContacts","toLowerCase","contact","name","includes","number","FormHooks","useState","setName","setNumber","useSelector","contactsSelectors","dispatch","useDispatch","nameInputId","shortid","generate","numInputId","handleChange","e","currentTarget","value","reset","onSubmit","preventDefault","nameInlist","find","numberInList","toast","error","contactsOperations","addContacts","success","htmlFor","formInput","placeholder","type","pattern","required","onChange","formBtn","ContactsList","contactList","map","contactItem","contactDescription","deleteBtn","onClick","deleteContacts","Filter","label","filterInput","changeFilter","target","PhonebookView","useEffect","fetchContacts","container","Form","_slicedToArray","arr","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","err","unsupportedIterableToArray","TypeError","previousSeed","shuffled","randomFromSeed","ORIGINAL","setCharacters","_alphabet_","Error","unique","split","item","ind","lastIndexOf","join","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","splice","shuffle","characters","seed","lookup","index","build","isValid","clusterWorkerId","seedValue","worker","workerId","newCharacters","_seed_","counter","previousSeconds","str","seconds","Date","now","format","loopCounter","pow"],"mappings":"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","file":"static/js/3.a48eb611.chunk.js","sourcesContent":["'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nmodule.exports = 0;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formInput\":\"Form_formInput__7h6Ga\",\"formBtn\":\"Form_formBtn__6_XDB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactsList_contactList__-3u15\",\"contactItem\":\"ContactsList_contactItem__tVLDq\",\"contactDescription\":\"ContactsList_contactDescription__3l3Kl\",\"deleteBtn\":\"ContactsList_deleteBtn__9HgYF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__u16Kg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PhoneBookViews_container__1AbvN\"};","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>\n        {title === 'Phonebook' }\n        {title}\n      </h2>\n      {children}\n    </section>\n  );\n};\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};","import { createSelector } from '@reduxjs/toolkit';\n\n\nexport const getContacts = state => state.phoneBook.contacts;\n\nexport const getIsLoading = state => state.phoneBook.isLoading;\n\nexport const getFilter = state => state.phoneBook.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedContacts = filter.toLowerCase();\n   \n    return contacts.filter(\n      contact =>\n        contact.name.toLowerCase().includes(normalizedContacts) ||\n        contact.number.includes(filter),\n    );\n  },\n);","import { useState } from 'react';\nimport shortid from 'shortid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsSelectors, contactsOperations } from '../../redux/contacts';\nimport { toast } from 'react-toastify';\nimport s from './Form.module.css';\n\nconst FormHooks = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const dispatch = useDispatch();\n\n  const nameInputId = shortid.generate();\n  const numInputId = shortid.generate();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const nameInlist = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n    const numberInList = contacts.find(contact => contact.number === number);\n    if (nameInlist) {\n      toast.error(`'${name}' is already in your list`);\n      reset();\n      return;\n    }\n    if (numberInList) {\n      toast.error(`'${number}' is already in your list`);\n      reset();\n      return;\n    }\n    dispatch(contactsOperations.addContacts({ name, number }));\n    toast.success(`'${name}' added to phonebook`);\n    reset();\n  };\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor={nameInputId}>\n          <input\n            className={s.formInput}\n            placeholder=\"Name\"\n            id={nameInputId}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"The name can only consist of letters, an apostrophe, a dash and spaces.\"\n            required\n            onChange={handleChange}\n          />\n        </label>\n\n        <label htmlFor={numInputId}>\n          <input\n            className={s.formInput}\n            placeholder=\"Tel\"\n            id={numInputId}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"The phone number must consist of digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={handleChange}\n          />\n        </label>\n        <button className={s.formBtn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default FormHooks;","import s from './ContactsList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsSelectors, contactsOperations } from '../../redux/contacts';\n\n\nconst ContactsList = () => {\n  const contacts = useSelector(contactsSelectors.getVisibleContacts);\n  const dispatch = useDispatch();\n  return (\n    <ul className={s.contactList}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.contactItem}>\n          <p className={s.contactDescription}>\n            {name}: {number}\n          </p>\n          <button\n            className={s.deleteBtn}\n            type=\"button\"\n            onClick={() => dispatch(contactsOperations.deleteContacts(id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactsList;","import { useSelector, useDispatch } from 'react-redux';\nimport s from './Filter.module.css';\nimport { changeFilter } from '../../redux/contacts/contactsSlice';\nimport { contactsSelectors } from '../../redux/contacts';\n\nconst Filter = () => {\n  const value = useSelector(contactsSelectors.getFilter);\n  const dispatch = useDispatch();\n  return (\n    <label className={s.label}>\n      <input\n        className={s.filterInput}\n        placeholder=\"Find contacts\"\n        type=\"text\"\n        value={value}\n        onChange={e => dispatch(changeFilter(e.target.value))}\n      />\n    </label>\n  );\n};\n\nexport default Filter;","import Section from \"../../components/Section/Section\";\nimport Form from \"../../components/Form/Form\";\nimport ContactsList from \"../../components/ContactsList/ContactsList\";\nimport Filter from \"../../components/Filter/Filter\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { contactsSelectors, contactsOperations } from \"../../redux/contacts\";\nimport { useEffect } from \"react\";\nimport s from \"./PhoneBookViews.module.css\";\n\nexport default function PhonebookView() {\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n  return (\n    <div className={s.container}>\n      <Section title=\"Phonebook\">\n        <Form />\n      </Section>\n      {contacts.length > 0 && (\n        <Section title=\"Contacts\">\n          <Filter />\n          <ContactsList />\n        </Section>\n      )}\n    </div>\n  );\n}\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\",\"title\":\"Section_title__2S6oE\"};","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n"],"sourceRoot":""}